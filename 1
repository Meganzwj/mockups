import React, { useState } from 'react';

// Layout component
const Layout = ({ children, onNavigate, showBack }) => (
  <div className="flex flex-col min-h-screen">
    <header className="bg-blue-600 text-white p-4">
      <div className="container mx-auto flex justify-between items-center">
        <h1 className="text-2xl font-bold cursor-pointer" onClick={() => onNavigate('Home')}>Data Access Portal</h1>
        {showBack && (
          <button onClick={() => onNavigate('Home')} className="bg-white text-blue-600 px-4 py-2 rounded hover:bg-blue-100">
            Back to Home
          </button>
        )}
      </div>
    </header>
    <main className="flex-grow container mx-auto px-4 py-8">
      {children}
    </main>
    <footer className="bg-gray-200 p-4">
      <div className="container mx-auto text-center">
        <p>&copy; 2024 Data Access Portal. All rights reserved.</p>
      </div>
    </footer>
  </div>
);

// Home page component
const HomePage = ({ onNavigate }) => (
  <div className="text-center">
    <h2 className="text-3xl font-bold mb-8">Self Service Data Request Tool</h2>
    <p className="mb-8 text-xl">
      Welcome to our data access self-service portal. Choose an option below to get started:
    </p>
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto">
      {[
        { title: "Request Data Access", action: "RequestData", color: "blue", description: "Select datasets, columns, or rows you need access to." },
        { title: "Request Compute Power", action: "RequestCompute", color: "green", description: "Choose the compute instance that fits your needs." },
        { title: "View My Requests", action: "MyRequests", color: "yellow", description: "Check the status of your submitted requests." },
        { title: "Contact Support", action: "ContactUs", color: "purple", description: "Get in touch with our support team for assistance." }
      ].map((item, index) => (
        <div key={index} className={`bg-${item.color}-100 shadow-md rounded-lg p-6 flex flex-col justify-between`}>
          <div>
            <h3 className={`text-xl font-semibold mb-2 text-${item.color}-700`}>{item.title}</h3>
            <p className={`mb-4 text-${item.color}-600`}>{item.description}</p>
          </div>
          <button 
            onClick={() => onNavigate(item.action)} 
            className={`bg-${item.color}-600 text-white px-4 py-2 rounded hover:bg-${item.color}-700 transition-colors`}
          >
            {item.title}
          </button>
        </div>
      ))}
    </div>
  </div>
);

// Placeholder components for other pages
const RequestDataPage = () => (
  <div>
    <h2 className="text-2xl font-bold mb-4">Request Data Access</h2>
    <p>This is where you can request access to specific datasets, columns, or rows.</p>
  </div>
);

const MyRequestsPage = () => (
  <div>
    <h2 className="text-2xl font-bold mb-4">My Requests</h2>
    <p>Here you can view all your submitted requests and their current status.</p>
  </div>
);

const RequestComputePage = () => (
  <div>
    <h2 className="text-2xl font-bold mb-4">Request Compute Power</h2>
    <p>Select the type of compute instance you need for your projects.</p>
  </div>
);

const ContactUsPage = () => (
  <div>
    <h2 className="text-2xl font-bold mb-4">Contact Support</h2>
    <p>If you need assistance, please contact us at: support@dataaccess.com</p>
  </div>
);

// Main App component
const App = () => {
  const [currentPage, setCurrentPage] = useState('Home');

  const handleNavigate = (page) => {
    setCurrentPage(page);
  };

  const renderPage = () => {
    switch (currentPage) {
      case 'Home':
        return <HomePage onNavigate={handleNavigate} />;
      case 'RequestData':
        return <RequestDataPage />;
      case 'MyRequests':
        return <MyRequestsPage />;
      case 'RequestCompute':
        return <RequestComputePage />;
      case 'ContactUs':
        return <ContactUsPage />;
      default:
        return <HomePage onNavigate={handleNavigate} />;
    }
  };

  return (
    <Layout onNavigate={handleNavigate} showBack={currentPage !== 'Home'}>
      {renderPage()}
    </Layout>
  );
};

export default App;
